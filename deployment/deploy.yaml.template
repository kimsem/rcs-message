# ConfigMap for Application Settings
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${userid}-rcs-config
  namespace: ${app_namespace}
data:
  # Application Settings
  APP_NAME: "rcs"
  SERVER_PORT: "8080"
  
  # Database Connections
  MESSAGE_DB_URL: "jdbc:postgresql://10.0.215.208:5432/rcs-message-db"
  MESSAGE_DB_USERNAME: "dg4s"
  MESSAGE_DB_PASSWORD: "p@ssw0rd!@"
  
  BASEDATA_DB_URL: "jdbc:postgresql://10.0.43.236:5432/rcs-base-db"
  BASEDATA_DB_USERNAME: "dg4s"
  BASEDATA_DB_PASSWORD: "p@ssw0rd!@"
  
  AUTH_DB_URL: "jdbc:postgresql://10.0.195.172:5432/rcs-auth-db"
  AUTH_DB_USERNAME: "dg4s"
  AUTH_DB_PASSWORD: "p@ssw0rd!@"
  
  MONGODB_URI: "mongodb+srv://dg4us-mongo.mongocluster.cosmos.azure.com/"
  MONGODB_DB_USERNAME: "dg4sadm"
  MONGODB_DB_PASSWORD: "p@ssw0rd!@"
  MONGODB_DATABASE: "rcs-history-db"
  
  # JPA Settings
  JPA_DDL_AUTO: "update"
  JPA_SHOW_SQL: "true"

  #EVENTHUB
  EVENTHUB_CONNECTION_STRING: "Endpoint=sb://dg4us-eventhub-ns.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=ABUzYkX9Ca3F3Xo4b6bi0Mf+HuqRA12qA+AEhCsri3A="
  # 수신번호 암호화 요청 큐
  EVENTHUB_ENCRYPT_NUM_REQ: "number-encrypt-requests"
  # 메시지 발송 요청 큐
  EVENTHUB_MESSAGE_SEND_REQ: "rcs-message-send"
  # 메시지 수신결과 응답 큐
  EVENTHUB_MESSAGE_RESULT_RES: "rcs-message-result"
  # 미사용 
  ENCRYPTION_KEY: "0123456789abcdef0123456789abcdef"

---
# Auth Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-rcs-auth
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: auth-service
        userid: ${userid}
    spec:
      containers:
      - name: auth-service
        image: ${auth_image_path}
        imagePullPolicy: Always
        env:
        - name: AUTH_DB_URL
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: AUTH_DB_URL
        - name: AUTH_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: AUTH_DB_USERNAME
        - name: AUTH_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: AUTH_DB_PASSWORD
        - name: EVENTHUB_CONNECTION_STRING
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: azure.eventhub.connection-string
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: EVENTHUB_ENCRYPT_NUM_REQ
          value: "number-encrypt-requests"
        - name: EVENTHUB_MESSAGE_SEND_REQ
          value: "rcs-message-send"
        - name: EVENTHUB_MESSAGE_RESULT_RES
          value: "rcs-message-result"
        resources:
          requests:
            cpu: 250m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1024Mi

---
# Auth Service
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-rcs-auth
  namespace: ${app_namespace}
spec:
  selector:
    app: auth-service
    userid: ${userid}
  ports:
    - port: 8080
      targetPort: 8080
  type: LoadBalancer
  
---
# BASEDATA Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-rcs-basedata
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: basedata-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: basedata-service
        userid: ${userid}
    spec:
      containers:
      - name: basedata-service
        image: ${basedata_image_path}
        imagePullPolicy: Always
        env:
        - name: BASEDATA_DB_URL
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: BASEDATA_DB_URL
        - name: BASEDATA_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: BASEDATA_DB_USERNAME
        - name: BASEDATA_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: BASEDATA_DB_PASSWORD
        - name: EVENTHUB_CONNECTION_STRING
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: azure.eventhub.connection-string
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: EVENTHUB_ENCRYPT_NUM_REQ
          value: "number-encrypt-requests"
        - name: EVENTHUB_MESSAGE_SEND_REQ
          value: "rcs-message-send"
        - name: EVENTHUB_MESSAGE_RESULT_RES
          value: "rcs-message-result"
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1024Mi

---
# BASEDATA Service
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-rcs-basedata
  namespace: ${app_namespace}
spec:
  selector:
    app: basedata-service
    userid: ${userid}
  ports:
    - port: 8080
      targetPort: 8080
  type: LoadBalancer
  
---
# HISTORY Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-rcs-history
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: history-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: history-service
        userid: ${userid}
    spec:
      containers:
      - name: history-service
        image: ${history_image_path}
        imagePullPolicy: Always
        env:
        - name: HISTORY_DB_URL
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: HISTORY_DB_URL
        - name: HISTORY_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: HISTORY_DB_USERNAME
        - name: HISTORY_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: HISTORY_DB_PASSWORD
        - name: EVENTHUB_CONNECTION_STRING
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: azure.eventhub.connection-string
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: EVENTHUB_ENCRYPT_NUM_REQ
          value: "number-encrypt-requests"
        - name: EVENTHUB_MESSAGE_SEND_REQ
          value: "rcs-message-send"
        - name: EVENTHUB_MESSAGE_RESULT_RES
          value: "rcs-message-result"
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1024Mi

---
# History Service
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-rcs-history
  namespace: ${app_namespace}
spec:
  selector:
    app: history-service
    userid: ${userid}
  ports:
    - port: 8080
      targetPort: 8080
  type: LoadBalancer

---
# Message Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-rcs-message
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: message-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: message-service
        userid: ${userid}
    spec:
      containers:
      - name: message-service
        image: ${message_image_path}
        imagePullPolicy: Always
        env:
        - name: MESSAGE_DB_URL
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: MESSAGE_DB_URL
        - name: MESSAGE_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: MESSAGE_DB_USERNAME
        - name: MESSAGE_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: MESSAGE_DB_PASSWORD
        - name: EVENTHUB_CONNECTION_STRING
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING 
        - name: azure.eventhub.connection-string
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: EVENTHUB_ENCRYPT_NUM_REQ
          value: "number-encrypt-requests"
        - name: EVENTHUB_MESSAGE_SEND_REQ
          value: "rcs-message-send"
        - name: EVENTHUB_MESSAGE_RESULT_RES
          value: "rcs-message-result"
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1024Mi

---
# Message Service
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-rcs-message
  namespace: ${app_namespace}
spec:
  selector:
    app: message-service
    userid: ${userid}
  ports:
    - port: 8080
      targetPort: 8080
  type: LoadBalancer
