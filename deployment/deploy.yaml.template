# ConfigMap for Application Settings.
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${userid}-rcs-config
  namespace: ${app_namespace}
data:
  # Application Settings
  APP_NAME: "rcs"
  SERVER_PORT: "8080"
  
  # Database Connections
  # MESSAGE_DB_URL: "jdbc:postgresql://10.0.215.208:5432/rcs-message-db"
  MESSAGE_DB_URL: "jdbc:postgresql://20.41.121.201:5432/rcs-message-db"
  MESSAGE_DB_USERNAME: "dg4s"
  MESSAGE_DB_PASSWORD: "p@ssw0rd!@"
  
  BASEDATA_DB_URL: "jdbc:postgresql://10.0.43.236:5432/rcs-base-db"
  BASEDATA_DB_USERNAME: "dg4s"
  BASEDATA_DB_PASSWORD: "p@ssw0rd!@"
  
  AUTH_DB_URL: "jdbc:postgresql://10.0.195.172:5432/rcs-auth-db"
  AUTH_DB_USERNAME: "dg4s"
  AUTH_DB_PASSWORD: "p@ssw0rd!@"
  
  MONGODB_URI: "dg4us-mongo.mongocluster.cosmos.azure.com"
  MONGODB_DB_USERNAME: "dg4sadm"
  MONGODB_DB_PASSWORD: "p%40ssw0rd!%40"
  MONGODB_DATABASE: "rcs-history-db"
  
  # JPA Settings
  JPA_DDL_AUTO: "update"
  JPA_SHOW_SQL: "true"

  #EVENTHUB
  EVENTHUB_CONNECTION_STRING: "Endpoint=sb://dg4us-eventhub-ns.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=ABUzYkX9Ca3F3Xo4b6bi0Mf+HuqRA12qA+AEhCsri3A="
  # 수신번호 암호화 요청 큐
  EVENTHUB_ENCRYPT_NUM_REQ: "number-encrypt-requests"
  # 메시지 발송 요청 큐
  EVENTHUB_MESSAGE_SEND_REQ: "rcs-message-send"
  # 메시지 수신결과 응답 큐
  EVENTHUB_MESSAGE_RESULT_RES: "rcs-message-result"
  # 미사용 
  ENCRYPTION_KEY: "0123456789abcdef0123456789abcdef"

---
# ConfigMap for Gateway
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-config
  namespace: rcs-mvp
data:
  SERVER_PORT: "8000"
  AUTH_SERVICE_URL: "http://dg4us-rcs-auth:8080"
  MESSAGE_SERVICE_URL: "http://dg4us-rcs-message:8080"
  HISTORY_SERVICE_URL: "http://dg4us-rcs-history:8080"
  BASEDATA_SERVICE_URL: "http://dg4us-rcs-basedata:8080"

---
# Auth Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-rcs-auth
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: auth-service
        userid: ${userid}
    spec:
      containers:
      - name: auth-service
        image: ${auth_image_path}
        imagePullPolicy: Always
        volumeMounts:
         - name: timezone
           mountPath: /etc/localtime
           readOnly: true
        env:
        - name: JAVA_OPTS
          valueFrom:
                configMapKeyRef:
                  name: jvm-settings
                  key: AUTH_JAVA_OPTS
        - name: AUTH_DB_URL
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: AUTH_DB_URL
        - name: AUTH_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: AUTH_DB_USERNAME
        - name: AUTH_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: AUTH_DB_PASSWORD
        - name: EVENTHUB_CONNECTION_STRING
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: azure.eventhub.connection-string
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: EVENTHUB_ENCRYPT_NUM_REQ
          value: "number-encrypt-requests"
        - name: EVENTHUB_MESSAGE_SEND_REQ
          value: "rcs-message-send"
        - name: EVENTHUB_MESSAGE_RESULT_RES
          value: "rcs-message-result"
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1024Mi
      volumes:
          - name: timezone
            hostPath:
            path: /usr/share/zoneinfo/Asia/Seoul
            type: File

---
# Auth Service
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-rcs-auth
  namespace: ${app_namespace}
spec:
  selector:
    app: auth-service
    userid: ${userid}
  ports:
    - port: 8080
      targetPort: 8081
  type: LoadBalancer

---
# BASEDATA Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-rcs-basedata
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: basedata-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: basedata-service
        userid: ${userid}
    spec:
      containers:
      - name: basedata-service
        image: ${basedata_image_path}
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTS
          valueFrom:
            configMapKeyRef:
                name: jvm-settings
                key: BASEDATA_JAVA_OPTS
        - name: BASEDATA_DB_URL
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: BASEDATA_DB_URL
        - name: BASEDATA_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: BASEDATA_DB_USERNAME
        - name: BASEDATA_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: BASEDATA_DB_PASSWORD
        - name: EVENTHUB_CONNECTION_STRING
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: azure.eventhub.connection-string
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: EVENTHUB_ENCRYPT_NUM_REQ
          value: "number-encrypt-requests"
        - name: EVENTHUB_MESSAGE_SEND_REQ
          value: "rcs-message-send"
        - name: EVENTHUB_MESSAGE_RESULT_RES
          value: "rcs-message-result"
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1024Mi

---
# BASEDATA Service
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-rcs-basedata
  namespace: ${app_namespace}
spec:
  selector:
    app: basedata-service
    userid: ${userid}
  ports:
    - port: 8080
      targetPort: 8084
  type: LoadBalancer

---
# HISTORY Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-rcs-history
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: history-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: history-service
        userid: ${userid}
    spec:
      containers:
      - name: history-service
        image: ${history_image_path}
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTS
          valueFrom:
                configMapKeyRef:
                  name: jvm-settings
                  key: HISTORY_JAVA_OPTS
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: MONGODB_URI
        - name: MONGODB_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: MONGODB_DB_USERNAME
        - name: MONGODB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: MONGODB_DATABASE
        - name: MONGODB_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: MONGODB_DB_PASSWORD
        - name: EVENTHUB_CONNECTION_STRING
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: azure.eventhub.connection-string
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: EVENTHUB_ENCRYPT_NUM_REQ
          value: "number-encrypt-requests"
        - name: EVENTHUB_MESSAGE_SEND_REQ
          value: "rcs-message-send"
        - name: EVENTHUB_MESSAGE_RESULT_RES
          value: "rcs-message-result"
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1024Mi

---
# History Service
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-rcs-history
  namespace: ${app_namespace}
  annotations:
                  prometheus.io/scrape: "true"
                  prometheus.io/path: "/actuator/prometheus"
                  prometheus.io/port: "8083"
spec:
  selector:
    app: history-service
    userid: ${userid}
  ports:
    - port: 8080
      targetPort: 8083
  type: LoadBalancer

---
# Message Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-rcs-message
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: message-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: message-service
        userid: ${userid}
    spec:
      containers:
      - name: message-service
        image: ${message_image_path}
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTS
          valueFrom:
             configMapKeyRef:
                  name: jvm-settings
                  key: MESSAGE_JAVA_OPTS
        - name: MESSAGE_DB_URL
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: MESSAGE_DB_URL
        - name: MESSAGE_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: MESSAGE_DB_USERNAME
        - name: MESSAGE_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${userid}-db-credentials
              key: MESSAGE_DB_PASSWORD
        - name: ENCRYPTION_KEY
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: ENCRYPTION_KEY
        - name: EVENTHUB_CONNECTION_STRING
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING 
        - name: azure.eventhub.connection-string
          valueFrom:
            configMapKeyRef:
              name: ${userid}-rcs-config
              key: EVENTHUB_CONNECTION_STRING
        - name: EVENTHUB_ENCRYPT_NUM_REQ
          value: "number-encrypt-requests"
        - name: EVENTHUB_MESSAGE_SEND_REQ
          value: "rcs-message-send"
        - name: EVENTHUB_MESSAGE_RESULT_RES
          value: "rcs-message-result"
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 2048Mi

---
# Message Service
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-rcs-message
  namespace: ${app_namespace}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/port: "8082"
spec:
  selector:
    app: message-service
    userid: ${userid}
  ports:
    - port: 8080
      targetPort: 8082
  type: LoadBalancer

---
# Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${userid}-rcs-gateway
  namespace: ${app_namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway-service
      userid: ${userid}
  template:
    metadata:
      labels:
        app: gateway-service
        userid: ${userid}
    spec:
      containers:
        - name: gateway
          image: ${gateway_image_path}
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: gateway-config
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1024Mi

---
# Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: ${userid}-rcs-gateway
  namespace: ${app_namespace}
spec:
  selector:
    app: gateway-service
    userid: ${userid}
  ports:
    - port: 8000
      targetPort: 8000
  type: LoadBalancer